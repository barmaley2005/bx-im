{"version":3,"file":"vue-multiselect.js","sources":["../../srcjs/multiselect/multiselectMixin.js","../../srcjs/multiselect/pointerMixin.js","../../srcjs/multiselect/multiselect.js"],"sourcesContent":["function isEmpty (opt) {\r\n  if (opt === 0) return false\r\n  if (Array.isArray(opt) && opt.length === 0) return true\r\n  return !opt\r\n}\r\n\r\nfunction not (fun) {\r\n  return (...params) => !fun(...params)\r\n}\r\n\r\nfunction includes (str, query) {\r\n  /* istanbul ignore else */\r\n  if (str === undefined) str = 'undefined'\r\n  if (str === null) str = 'null'\r\n  if (str === false) str = 'false'\r\n  const text = str.toString().toLowerCase()\r\n  return text.indexOf(query.trim()) !== -1\r\n}\r\n\r\nfunction filterOptions (options, search, label, customLabel) {\r\n  return options.filter(option => includes(customLabel(option, label), search))\r\n}\r\n\r\nfunction stripGroups (options) {\r\n  return options.filter(option => !option.$isLabel)\r\n}\r\n\r\nfunction flattenOptions (values, label) {\r\n  return (options) =>\r\n    options.reduce((prev, curr) => {\r\n      /* istanbul ignore else */\r\n      if (curr[values] && curr[values].length) {\r\n        prev.push({\r\n          $groupLabel: curr[label],\r\n          $isLabel: true\r\n        })\r\n        return prev.concat(curr[values])\r\n      }\r\n      return prev\r\n    }, [])\r\n}\r\n\r\nfunction filterGroups (search, label, values, groupLabel, customLabel) {\r\n  return (groups) =>\r\n    groups.map(group => {\r\n      /* istanbul ignore else */\r\n      if (!group[values]) {\r\n        console.warn(`Options passed to vue-multiselect do not contain groups, despite the config.`)\r\n        return []\r\n      }\r\n      const groupOptions = filterOptions(group[values], search, label, customLabel)\r\n\r\n      return groupOptions.length\r\n        ? {\r\n          [groupLabel]: group[groupLabel],\r\n          [values]: groupOptions\r\n        }\r\n        : []\r\n    })\r\n}\r\n\r\nconst flow = (...fns) => x => fns.reduce((v, f) => f(v), x)\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      search: '',\r\n      isOpen: false,\r\n      preferredOpenDirection: 'below',\r\n      optimizedHeight: this.maxHeight\r\n    }\r\n  },\r\n  props: {\r\n    /**\r\n     * Decide whether to filter the results based on search query.\r\n     * Useful for async filtering, where we search through more complex data.\r\n     * @type {Boolean}\r\n     */\r\n    internalSearch: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    /**\r\n     * Array of available options: Objects, Strings or Integers.\r\n     * If array of objects, visible label will default to option.label.\r\n     * If `labal` prop is passed, label will equal option['label']\r\n     * @type {Array}\r\n     */\r\n    options: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    /**\r\n     * Equivalent to the `multiple` attribute on a `<select>` input.\r\n     * @default false\r\n     * @type {Boolean}\r\n     */\r\n    multiple: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    /**\r\n     * Presets the selected options value.\r\n     * @type {Object||Array||String||Integer}\r\n     */\r\n    value: {\r\n      type: null,\r\n      default () {\r\n        return []\r\n      }\r\n    },\r\n    /**\r\n     * Key to compare objects\r\n     * @default 'id'\r\n     * @type {String}\r\n     */\r\n    trackBy: {\r\n      type: String\r\n    },\r\n    /**\r\n     * Label to look for in option Object\r\n     * @default 'label'\r\n     * @type {String}\r\n     */\r\n    label: {\r\n      type: String\r\n    },\r\n    /**\r\n     * Enable/disable search in options\r\n     * @default true\r\n     * @type {Boolean}\r\n     */\r\n    searchable: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    /**\r\n     * Clear the search input after `)\r\n     * @default true\r\n     * @type {Boolean}\r\n     */\r\n    clearOnSelect: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    /**\r\n     * Hide already selected options\r\n     * @default false\r\n     * @type {Boolean}\r\n     */\r\n    hideSelected: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    /**\r\n     * Equivalent to the `placeholder` attribute on a `<select>` input.\r\n     * @default 'Select option'\r\n     * @type {String}\r\n     */\r\n    placeholder: {\r\n      type: String,\r\n      default: 'Select option'\r\n    },\r\n    /**\r\n     * Allow to remove all selected values\r\n     * @default true\r\n     * @type {Boolean}\r\n     */\r\n    allowEmpty: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    /**\r\n     * Reset this.internalValue, this.search after this.internalValue changes.\r\n     * Useful if want to create a stateless dropdown.\r\n     * @default false\r\n     * @type {Boolean}\r\n     */\r\n    resetAfter: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    /**\r\n     * Enable/disable closing after selecting an option\r\n     * @default true\r\n     * @type {Boolean}\r\n     */\r\n    closeOnSelect: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    /**\r\n     * Function to interpolate the custom label\r\n     * @default false\r\n     * @type {Function}\r\n     */\r\n    customLabel: {\r\n      type: Function,\r\n      default (option, label) {\r\n        if (isEmpty(option)) return ''\r\n        return label ? option[label] : option\r\n      }\r\n    },\r\n    /**\r\n     * Disable / Enable tagging\r\n     * @default false\r\n     * @type {Boolean}\r\n     */\r\n    taggable: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    /**\r\n     * String to show when highlighting a potential tag\r\n     * @default 'Press enter to create a tag'\r\n     * @type {String}\r\n    */\r\n    tagPlaceholder: {\r\n      type: String,\r\n      default: 'Press enter to create a tag'\r\n    },\r\n    /**\r\n     * By default new tags will appear above the search results.\r\n     * Changing to 'bottom' will revert this behaviour\r\n     * and will proritize the search results\r\n     * @default 'top'\r\n     * @type {String}\r\n    */\r\n    tagPosition: {\r\n      type: String,\r\n      default: 'top'\r\n    },\r\n    /**\r\n     * Number of allowed selected options. No limit if 0.\r\n     * @default 0\r\n     * @type {Number}\r\n    */\r\n    max: {\r\n      type: [Number, Boolean],\r\n      default: false\r\n    },\r\n    /**\r\n     * Will be passed with all events as second param.\r\n     * Useful for identifying events origin.\r\n     * @default null\r\n     * @type {String|Integer}\r\n    */\r\n    id: {\r\n      default: null\r\n    },\r\n    /**\r\n     * Limits the options displayed in the dropdown\r\n     * to the first X options.\r\n     * @default 1000\r\n     * @type {Integer}\r\n    */\r\n    optionsLimit: {\r\n      type: Number,\r\n      default: 1000\r\n    },\r\n    /**\r\n     * Name of the property containing\r\n     * the group values\r\n     * @default 1000\r\n     * @type {String}\r\n    */\r\n    groupValues: {\r\n      type: String\r\n    },\r\n    /**\r\n     * Name of the property containing\r\n     * the group label\r\n     * @default 1000\r\n     * @type {String}\r\n    */\r\n    groupLabel: {\r\n      type: String\r\n    },\r\n    /**\r\n     * Allow to select all group values\r\n     * by selecting the group label\r\n     * @default false\r\n     * @type {Boolean}\r\n     */\r\n    groupSelect: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    /**\r\n     * Array of keyboard keys to block\r\n     * when selecting\r\n     * @default 1000\r\n     * @type {String}\r\n    */\r\n    blockKeys: {\r\n      type: Array,\r\n      default () {\r\n        return []\r\n      }\r\n    },\r\n    /**\r\n     * Prevent from wiping up the search value\r\n     * @default false\r\n     * @type {Boolean}\r\n    */\r\n    preserveSearch: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    /**\r\n     * Select 1st options if value is empty\r\n     * @default false\r\n     * @type {Boolean}\r\n    */\r\n    preselectFirst: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    /**\r\n     * Prevent autofocus\r\n     * @default false\r\n     * @type {Boolean}\r\n    */\r\n    preventAutofocus: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  mounted () {\r\n    /* istanbul ignore else */\r\n    if (!this.multiple && this.max) {\r\n      console.warn('[Vue-Multiselect warn]: Max prop should not be used when prop Multiple equals false.')\r\n    }\r\n    if (\r\n      this.preselectFirst &&\r\n      !this.internalValue.length &&\r\n      this.options.length\r\n    ) {\r\n      this.select(this.filteredOptions[0])\r\n    }\r\n  },\r\n  computed: {\r\n    internalValue () {\r\n      return this.value || this.value === 0\r\n        ? Array.isArray(this.value) ? this.value : [this.value]\r\n        : []\r\n    },\r\n    filteredOptions () {\r\n      const search = this.search || ''\r\n      const normalizedSearch = search.toLowerCase().trim()\r\n\r\n      let options = this.options.concat()\r\n\r\n      /* istanbul ignore else */\r\n      if (this.internalSearch) {\r\n        options = this.groupValues\r\n          ? this.filterAndFlat(options, normalizedSearch, this.label)\r\n          : filterOptions(options, normalizedSearch, this.label, this.customLabel)\r\n      } else {\r\n        options = this.groupValues ? flattenOptions(this.groupValues, this.groupLabel)(options) : options\r\n      }\r\n\r\n      options = this.hideSelected\r\n        ? options.filter(not(this.isSelected))\r\n        : options\r\n\r\n      /* istanbul ignore else */\r\n      if (this.taggable && normalizedSearch.length && !this.isExistingOption(normalizedSearch)) {\r\n        if (this.tagPosition === 'bottom') {\r\n          options.push({ isTag: true, label: search })\r\n        } else {\r\n          options.unshift({ isTag: true, label: search })\r\n        }\r\n      }\r\n\r\n      return options.slice(0, this.optionsLimit)\r\n    },\r\n    valueKeys () {\r\n      if (this.trackBy) {\r\n        return this.internalValue.map(element => element[this.trackBy])\r\n      } else {\r\n        return this.internalValue\r\n      }\r\n    },\r\n    optionKeys () {\r\n      const options = this.groupValues ? this.flatAndStrip(this.options) : this.options\r\n      return options.map(element => this.customLabel(element, this.label).toString().toLowerCase())\r\n    },\r\n    currentOptionLabel () {\r\n      return this.multiple\r\n        ? this.searchable ? '' : this.placeholder\r\n        : this.internalValue.length\r\n          ? this.getOptionLabel(this.internalValue[0])\r\n          : this.searchable ? '' : this.placeholder\r\n    }\r\n  },\r\n  watch: {\r\n    internalValue () {\r\n      /* istanbul ignore else */\r\n      if (this.resetAfter && this.internalValue.length) {\r\n        this.search = ''\r\n        this.$emit('input', this.multiple ? [] : null)\r\n      }\r\n    },\r\n    search () {\r\n      this.$emit('search-change', this.search, this.id)\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * Returns the internalValue in a way it can be emited to the parent\r\n     * @returns {Object||Array||String||Integer}\r\n     */\r\n    getValue () {\r\n      return this.multiple\r\n        ? this.internalValue\r\n        : this.internalValue.length === 0\r\n          ? null\r\n          : this.internalValue[0]\r\n    },\r\n    /**\r\n     * Filters and then flattens the options list\r\n     * @param  {Array}\r\n     * @returns {Array} returns a filtered and flat options list\r\n     */\r\n    filterAndFlat (options, search, label) {\r\n      return flow(\r\n        filterGroups(search, label, this.groupValues, this.groupLabel, this.customLabel),\r\n        flattenOptions(this.groupValues, this.groupLabel)\r\n      )(options)\r\n    },\r\n    /**\r\n     * Flattens and then strips the group labels from the options list\r\n     * @param  {Array}\r\n     * @returns {Array} returns a flat options list without group labels\r\n     */\r\n    flatAndStrip (options) {\r\n      return flow(\r\n        flattenOptions(this.groupValues, this.groupLabel),\r\n        stripGroups\r\n      )(options)\r\n    },\r\n    /**\r\n     * Updates the search value\r\n     * @param  {String}\r\n     */\r\n    updateSearch (query) {\r\n      this.search = query\r\n    },\r\n    /**\r\n     * Finds out if the given query is already present\r\n     * in the available options\r\n     * @param  {String}\r\n     * @returns {Boolean} returns true if element is available\r\n     */\r\n    isExistingOption (query) {\r\n      return !this.options\r\n        ? false\r\n        : this.optionKeys.indexOf(query) > -1\r\n    },\r\n    /**\r\n     * Finds out if the given element is already present\r\n     * in the result value\r\n     * @param  {Object||String||Integer} option passed element to check\r\n     * @returns {Boolean} returns true if element is selected\r\n     */\r\n    isSelected (option) {\r\n      const opt = this.trackBy\r\n        ? option[this.trackBy]\r\n        : option\r\n      return this.valueKeys.indexOf(opt) > -1\r\n    },\r\n    /**\r\n     * Finds out if the given option is disabled\r\n     * @param  {Object||String||Integer} option passed element to check\r\n     * @returns {Boolean} returns true if element is disabled\r\n     */\r\n    isOptionDisabled (option) {\r\n      return !!option.$isDisabled\r\n    },\r\n    /**\r\n     * Returns empty string when options is null/undefined\r\n     * Returns tag query if option is tag.\r\n     * Returns the customLabel() results and casts it to string.\r\n     *\r\n     * @param  {Object||String||Integer} Passed option\r\n     * @returns {Object||String}\r\n     */\r\n    getOptionLabel (option) {\r\n      if (isEmpty(option)) return ''\r\n      /* istanbul ignore else */\r\n      if (option.isTag) return option.label\r\n      /* istanbul ignore else */\r\n      if (option.$isLabel) return option.$groupLabel\r\n\r\n      let label = this.customLabel(option, this.label)\r\n      /* istanbul ignore else */\r\n      if (isEmpty(label)) return ''\r\n      return label\r\n    },\r\n    /**\r\n     * Add the given option to the list of selected options\r\n     * or sets the option as the selected option.\r\n     * If option is already selected -> remove it from the results.\r\n     *\r\n     * @param  {Object||String||Integer} option to select/deselect\r\n     * @param  {Boolean} block removing\r\n     */\r\n    select (option, key) {\r\n      /* istanbul ignore else */\r\n      if (option.$isLabel && this.groupSelect) {\r\n        this.selectGroup(option)\r\n        return\r\n      }\r\n      if (this.blockKeys.indexOf(key) !== -1 ||\r\n        this.disabled ||\r\n        option.$isDisabled ||\r\n        option.$isLabel\r\n      ) return\r\n      /* istanbul ignore else */\r\n      if (this.max && this.multiple && this.internalValue.length === this.max) return\r\n      /* istanbul ignore else */\r\n      if (key === 'Tab' && !this.pointerDirty) return\r\n      if (option.isTag) {\r\n        this.$emit('tag', option.label, this.id)\r\n        this.search = ''\r\n        if (this.closeOnSelect && !this.multiple) this.deactivate()\r\n      } else {\r\n        const isSelected = this.isSelected(option)\r\n\r\n        if (isSelected) {\r\n          if (key !== 'Tab') this.removeElement(option)\r\n          return\r\n        }\r\n\r\n        if (this.multiple) {\r\n          this.$emit('input', this.internalValue.concat([option]), this.id)\r\n        } else {\r\n          this.$emit('input', option, this.id)\r\n        }\r\n\r\n        this.$emit('select', option, this.id)\r\n\r\n        /* istanbul ignore else */\r\n        if (this.clearOnSelect) this.search = ''\r\n      }\r\n      /* istanbul ignore else */\r\n      if (this.closeOnSelect) this.deactivate()\r\n    },\r\n    /**\r\n     * Add the given group options to the list of selected options\r\n     * If all group optiona are already selected -> remove it from the results.\r\n     *\r\n     * @param  {Object||String||Integer} group to select/deselect\r\n     */\r\n    selectGroup (selectedGroup) {\r\n      const group = this.options.find(option => {\r\n        return option[this.groupLabel] === selectedGroup.$groupLabel\r\n      })\r\n\r\n      if (!group) return\r\n\r\n      if (this.wholeGroupSelected(group)) {\r\n        this.$emit('remove', group[this.groupValues], this.id)\r\n\r\n        const newValue = this.internalValue.filter(\r\n          option => group[this.groupValues].indexOf(option) === -1\r\n        )\r\n\r\n        this.$emit('input', newValue, this.id)\r\n      } else {\r\n        let optionsToAdd = group[this.groupValues].filter(\r\n          option => !(this.isOptionDisabled(option) || this.isSelected(option))\r\n        )\r\n\r\n        // if max is defined then just select options respecting max\r\n        if (this.max) {\r\n          optionsToAdd.splice(this.max - this.internalValue.length)\r\n        }\r\n\r\n        this.$emit('select', optionsToAdd, this.id)\r\n        this.$emit(\r\n          'input',\r\n          this.internalValue.concat(optionsToAdd),\r\n          this.id\r\n        )\r\n      }\r\n\r\n      if (this.closeOnSelect) this.deactivate()\r\n    },\r\n    /**\r\n     * Helper to identify if all values in a group are selected\r\n     *\r\n     * @param {Object} group to validated selected values against\r\n     */\r\n    wholeGroupSelected (group) {\r\n      return group[this.groupValues].every(option => this.isSelected(option) || this.isOptionDisabled(option)\r\n      )\r\n    },\r\n    /**\r\n     * Helper to identify if all values in a group are disabled\r\n     *\r\n     * @param {Object} group to check for disabled values\r\n     */\r\n    wholeGroupDisabled (group) {\r\n      return group[this.groupValues].every(this.isOptionDisabled)\r\n    },\r\n    /**\r\n     * Removes the given option from the selected options.\r\n     * Additionally checks this.allowEmpty prop if option can be removed when\r\n     * it is the last selected option.\r\n     *\r\n     * @param  {type} option description\r\n     * @returns {type}        description\r\n     */\r\n    removeElement (option, shouldClose = true) {\r\n      /* istanbul ignore else */\r\n      if (this.disabled) return\r\n      /* istanbul ignore else */\r\n      if (option.$isDisabled) return\r\n      /* istanbul ignore else */\r\n      if (!this.allowEmpty && this.internalValue.length <= 1) {\r\n        this.deactivate()\r\n        return\r\n      }\r\n\r\n      const index = typeof option === 'object'\r\n        ? this.valueKeys.indexOf(option[this.trackBy])\r\n        : this.valueKeys.indexOf(option)\r\n\r\n      if (this.multiple) {\r\n        const newValue = this.internalValue.slice(0, index).concat(this.internalValue.slice(index + 1))\r\n        this.$emit('input', newValue, this.id)\r\n      } else {\r\n        this.$emit('input', null, this.id)\r\n      }\r\n      this.$emit('remove', option, this.id)\r\n\r\n      /* istanbul ignore else */\r\n      if (this.closeOnSelect && shouldClose) this.deactivate()\r\n    },\r\n    /**\r\n     * Calls this.removeElement() with the last element\r\n     * from this.internalValue (selected element Array)\r\n     *\r\n     * @fires this#removeElement\r\n     */\r\n    removeLastElement () {\r\n      /* istanbul ignore else */\r\n      if (this.blockKeys.indexOf('Delete') !== -1) return\r\n      /* istanbul ignore else */\r\n      if (this.search.length === 0 && Array.isArray(this.internalValue) && this.internalValue.length) {\r\n        this.removeElement(this.internalValue[this.internalValue.length - 1], false)\r\n      }\r\n    },\r\n    /**\r\n     * Opens the multiselectвЂ™s dropdown.\r\n     * Sets this.isOpen to TRUE\r\n     */\r\n    activate () {\r\n      /* istanbul ignore else */\r\n      if (this.isOpen || this.disabled) return\r\n\r\n      this.adjustPosition()\r\n      /* istanbul ignore else  */\r\n      if (this.groupValues && this.pointer === 0 && this.filteredOptions.length) {\r\n        this.pointer = 1\r\n      }\r\n\r\n      this.isOpen = true\r\n      /* istanbul ignore else  */\r\n      if (this.searchable) {\r\n        if (!this.preserveSearch) this.search = ''\r\n        if (!this.preventAutofocus) this.$nextTick(() => this.$refs.search && this.$refs.search.focus())\r\n      } else if (!this.preventAutofocus) {\r\n        if (typeof this.$el !== 'undefined') this.$el.focus()\r\n      }\r\n      this.$emit('open', this.id)\r\n    },\r\n    /**\r\n     * Closes the multiselectвЂ™s dropdown.\r\n     * Sets this.isOpen to FALSE\r\n     */\r\n    deactivate () {\r\n      /* istanbul ignore else */\r\n      if (!this.isOpen) return\r\n\r\n      this.isOpen = false\r\n      /* istanbul ignore else  */\r\n      if (this.searchable) {\r\n        if (typeof this.$refs.search !== 'undefined') this.$refs.search.blur()\r\n      } else {\r\n        if (typeof this.$el !== 'undefined') this.$el.blur()\r\n      }\r\n      if (!this.preserveSearch) this.search = ''\r\n      this.$emit('close', this.getValue(), this.id)\r\n    },\r\n    /**\r\n     * Call this.activate() or this.deactivate()\r\n     * depending on this.isOpen value.\r\n     *\r\n     * @fires this#activate || this#deactivate\r\n     * @property {Boolean} isOpen indicates if dropdown is open\r\n     */\r\n    toggle () {\r\n      this.isOpen\r\n        ? this.deactivate()\r\n        : this.activate()\r\n    },\r\n    /**\r\n     * Updates the hasEnoughSpace variable used for\r\n     * detecting where to expand the dropdown\r\n     */\r\n    adjustPosition () {\r\n      if (typeof window === 'undefined') return\r\n\r\n      const spaceAbove = this.$el.getBoundingClientRect().top\r\n      const spaceBelow = window.innerHeight - this.$el.getBoundingClientRect().bottom\r\n      const hasEnoughSpaceBelow = spaceBelow > this.maxHeight\r\n\r\n      if (hasEnoughSpaceBelow || spaceBelow > spaceAbove || this.openDirection === 'below' || this.openDirection === 'bottom') {\r\n        this.preferredOpenDirection = 'below'\r\n        this.optimizedHeight = Math.min(spaceBelow - 40, this.maxHeight)\r\n      } else {\r\n        this.preferredOpenDirection = 'above'\r\n        this.optimizedHeight = Math.min(spaceAbove - 40, this.maxHeight)\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  data () {\r\n    return {\r\n      pointer: 0,\r\n      pointerDirty: false\r\n    }\r\n  },\r\n  props: {\r\n    /**\r\n     * Enable/disable highlighting of the pointed value.\r\n     * @type {Boolean}\r\n     * @default true\r\n     */\r\n    showPointer: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    optionHeight: {\r\n      type: Number,\r\n      default: 40\r\n    }\r\n  },\r\n  computed: {\r\n    pointerPosition () {\r\n      return this.pointer * this.optionHeight\r\n    },\r\n    visibleElements () {\r\n      return this.optimizedHeight / this.optionHeight\r\n    }\r\n  },\r\n  watch: {\r\n    filteredOptions () {\r\n      this.pointerAdjust()\r\n    },\r\n    isOpen () {\r\n      this.pointerDirty = false\r\n    },\r\n    pointer () {\r\n      this.$refs.search && this.$refs.search.setAttribute('aria-activedescendant', this.id + '-' + this.pointer.toString())\r\n    }\r\n  },\r\n  methods: {\r\n    optionHighlight (index, option) {\r\n      return {\r\n        'multiselect__option--highlight': index === this.pointer && this.showPointer,\r\n        'multiselect__option--selected': this.isSelected(option)\r\n      }\r\n    },\r\n    groupHighlight (index, selectedGroup) {\r\n      if (!this.groupSelect) {\r\n        return [\r\n          'multiselect__option--disabled',\r\n          { 'multiselect__option--group': selectedGroup.$isLabel }\r\n        ]\r\n      }\r\n\r\n      const group = this.options.find(option => {\r\n        return option[this.groupLabel] === selectedGroup.$groupLabel\r\n      })\r\n\r\n      return group && !this.wholeGroupDisabled(group) ? [\r\n        'multiselect__option--group',\r\n        { 'multiselect__option--highlight': index === this.pointer && this.showPointer },\r\n        { 'multiselect__option--group-selected': this.wholeGroupSelected(group) }\r\n      ] : 'multiselect__option--disabled'\r\n    },\r\n    addPointerElement ({ key } = 'Enter') {\r\n      /* istanbul ignore else */\r\n      if (this.filteredOptions.length > 0) {\r\n        this.select(this.filteredOptions[this.pointer], key)\r\n      }\r\n      this.pointerReset()\r\n    },\r\n    pointerForward () {\r\n      /* istanbul ignore else */\r\n      if (this.pointer < this.filteredOptions.length - 1) {\r\n        this.pointer++\r\n        /* istanbul ignore next */\r\n        if (this.$refs.list.scrollTop <= this.pointerPosition - (this.visibleElements - 1) * this.optionHeight) {\r\n          this.$refs.list.scrollTop = this.pointerPosition - (this.visibleElements - 1) * this.optionHeight\r\n        }\r\n        /* istanbul ignore else */\r\n        if (\r\n          this.filteredOptions[this.pointer] &&\r\n          this.filteredOptions[this.pointer].$isLabel &&\r\n          !this.groupSelect\r\n        ) this.pointerForward()\r\n      }\r\n      this.pointerDirty = true\r\n    },\r\n    pointerBackward () {\r\n      if (this.pointer > 0) {\r\n        this.pointer--\r\n        /* istanbul ignore else */\r\n        if (this.$refs.list.scrollTop >= this.pointerPosition) {\r\n          this.$refs.list.scrollTop = this.pointerPosition\r\n        }\r\n        /* istanbul ignore else */\r\n        if (\r\n          this.filteredOptions[this.pointer] &&\r\n          this.filteredOptions[this.pointer].$isLabel &&\r\n          !this.groupSelect\r\n        ) this.pointerBackward()\r\n      } else {\r\n        /* istanbul ignore else */\r\n        if (\r\n          this.filteredOptions[this.pointer] &&\r\n          this.filteredOptions[0].$isLabel &&\r\n          !this.groupSelect\r\n        ) this.pointerForward()\r\n      }\r\n      this.pointerDirty = true\r\n    },\r\n    pointerReset () {\r\n      /* istanbul ignore else */\r\n      if (!this.closeOnSelect) return\r\n      this.pointer = 0\r\n      /* istanbul ignore else */\r\n      if (this.$refs.list) {\r\n        this.$refs.list.scrollTop = 0\r\n      }\r\n    },\r\n    pointerAdjust () {\r\n      /* istanbul ignore else */\r\n      if (this.pointer >= this.filteredOptions.length - 1) {\r\n        this.pointer = this.filteredOptions.length\r\n          ? this.filteredOptions.length - 1\r\n          : 0\r\n      }\r\n\r\n      if (this.filteredOptions.length > 0 &&\r\n        this.filteredOptions[this.pointer].$isLabel &&\r\n        !this.groupSelect\r\n      ) {\r\n        this.pointerForward()\r\n      }\r\n    },\r\n    pointerSet (index) {\r\n      this.pointer = index\r\n      this.pointerDirty = true\r\n    }\r\n  }\r\n}\r\n","import multiselectMixin from './multiselectMixin'\r\nimport pointerMixin from './pointerMixin'\r\nimport './multiselect.css';\r\n\r\n(function() {\r\n\r\n    function registerMultiselect(app)\r\n    {\r\n        app.component('vue-multiselect', {\r\n            mixins: [multiselectMixin, pointerMixin],\r\n            props: {\r\n                /**\r\n                 * name attribute to match optional label element\r\n                 * @default ''\r\n                 * @type {String}\r\n                 */\r\n                name: {\r\n                    type: String,\r\n                    default: ''\r\n                },\r\n                /**\r\n                 * String to show when pointing to an option\r\n                 * @default 'Press enter to select'\r\n                 * @type {String}\r\n                 */\r\n                selectLabel: {\r\n                    type: String,\r\n                    default: 'Press enter to select'\r\n                },\r\n                /**\r\n                 * String to show when pointing to an option\r\n                 * @default 'Press enter to select'\r\n                 * @type {String}\r\n                 */\r\n                selectGroupLabel: {\r\n                    type: String,\r\n                    default: 'Press enter to select group'\r\n                },\r\n                /**\r\n                 * String to show next to selected option\r\n                 * @default 'Selected'\r\n                 * @type {String}\r\n                 */\r\n                selectedLabel: {\r\n                    type: String,\r\n                    default: 'Selected'\r\n                },\r\n                /**\r\n                 * String to show when pointing to an already selected option\r\n                 * @default 'Press enter to remove'\r\n                 * @type {String}\r\n                 */\r\n                deselectLabel: {\r\n                    type: String,\r\n                    default: 'Press enter to remove'\r\n                },\r\n                /**\r\n                 * String to show when pointing to an already selected option\r\n                 * @default 'Press enter to remove'\r\n                 * @type {String}\r\n                 */\r\n                deselectGroupLabel: {\r\n                    type: String,\r\n                    default: 'Press enter to deselect group'\r\n                },\r\n                noElementsFoundText: {\r\n                    type: String,\r\n                    default: 'No elements found. Consider changing the search query.'\r\n                },\r\n                listIsEmpty: {\r\n                    type: String,\r\n                    default: 'List is empty.'\r\n                },\r\n                /**\r\n                 * Decide whether to show pointer labels\r\n                 * @default true\r\n                 * @type {Boolean}\r\n                 */\r\n                showLabels: {\r\n                    type: Boolean,\r\n                    default: true\r\n                },\r\n                /**\r\n                 * Limit the display of selected options. The rest will be hidden within the limitText string.\r\n                 * @default 99999\r\n                 * @type {Integer}\r\n                 */\r\n                limit: {\r\n                    type: Number,\r\n                    default: 99999\r\n                },\r\n                /**\r\n                 * Sets maxHeight style value of the dropdown\r\n                 * @default 300\r\n                 * @type {Integer}\r\n                 */\r\n                maxHeight: {\r\n                    type: Number,\r\n                    default: 300\r\n                },\r\n                /**\r\n                 * Function that process the message shown when selected\r\n                 * elements pass the defined limit.\r\n                 * @default 'and * more'\r\n                 * @param {Int} count Number of elements more than limit\r\n                 * @type {Function}\r\n                 */\r\n                limitText: {\r\n                    type: Function,\r\n                    default: count => `and ${count} more`\r\n                },\r\n                /**\r\n                 * Set true to trigger the loading spinner.\r\n                 * @default False\r\n                 * @type {Boolean}\r\n                 */\r\n                loading: {\r\n                    type: Boolean,\r\n                    default: false\r\n                },\r\n                /**\r\n                 * Disables the multiselect if true.\r\n                 * @default false\r\n                 * @type {Boolean}\r\n                 */\r\n                disabled: {\r\n                    type: Boolean,\r\n                    default: false\r\n                },\r\n                /**\r\n                 * Fixed opening direction\r\n                 * @default ''\r\n                 * @type {String}\r\n                 */\r\n                openDirection: {\r\n                    type: String,\r\n                    default: ''\r\n                },\r\n                /**\r\n                 * Shows slot with message about empty options\r\n                 * @default true\r\n                 * @type {Boolean}\r\n                 */\r\n                showNoOptions: {\r\n                    type: Boolean,\r\n                    default: true\r\n                },\r\n                showNoResults: {\r\n                    type: Boolean,\r\n                    default: true\r\n                },\r\n                tabindex: {\r\n                    type: Number,\r\n                    default: 0\r\n                }\r\n            },\r\n            computed: {\r\n                hasOptionGroup() {\r\n                    return this.groupValues && this.groupLabel && this.groupSelect\r\n                },\r\n                isSingleLabelVisible() {\r\n                    return (\r\n                        (this.singleValue || this.singleValue === 0) &&\r\n                        (!this.isOpen || !this.searchable) &&\r\n                        !this.visibleValues.length\r\n                    )\r\n                },\r\n                isPlaceholderVisible() {\r\n                    return !this.internalValue.length && (!this.searchable || !this.isOpen)\r\n                },\r\n                visibleValues() {\r\n                    return this.multiple ? this.internalValue.slice(0, this.limit) : []\r\n                },\r\n                singleValue() {\r\n                    return this.internalValue[0]\r\n                },\r\n                deselectLabelText() {\r\n                    return this.showLabels ? this.deselectLabel : ''\r\n                },\r\n                deselectGroupLabelText() {\r\n                    return this.showLabels ? this.deselectGroupLabel : ''\r\n                },\r\n                selectLabelText() {\r\n                    return this.showLabels ? this.selectLabel : ''\r\n                },\r\n                selectGroupLabelText() {\r\n                    return this.showLabels ? this.selectGroupLabel : ''\r\n                },\r\n                selectedLabelText() {\r\n                    return this.showLabels ? this.selectedLabel : ''\r\n                },\r\n                inputStyle() {\r\n                    if (\r\n                        this.searchable ||\r\n                        (this.multiple && this.value && this.value.length)\r\n                    ) {\r\n                        // Hide input by setting the width to 0 allowing it to receive focus\r\n                        return this.isOpen\r\n                            ? {width: '100%'}\r\n                            : {width: '0', position: 'absolute', padding: '0'}\r\n                    }\r\n                    return ''\r\n                },\r\n                contentStyle() {\r\n                    return this.options.length\r\n                        ? {display: 'inline-block'}\r\n                        : {display: 'block'}\r\n                },\r\n                isAbove() {\r\n                    if (this.openDirection === 'above' || this.openDirection === 'top') {\r\n                        return true\r\n                    } else if (\r\n                        this.openDirection === 'below' ||\r\n                        this.openDirection === 'bottom'\r\n                    ) {\r\n                        return false\r\n                    } else {\r\n                        return this.preferredOpenDirection === 'above'\r\n                    }\r\n                },\r\n                showSearchInput() {\r\n                    return (\r\n                        this.searchable &&\r\n                        (this.hasSingleSelectedSlot &&\r\n                        (this.visibleSingleValue || this.visibleSingleValue === 0)\r\n                            ? this.isOpen\r\n                            : true)\r\n                    )\r\n                }\r\n            },\r\n            data() {\r\n                return {\r\n                    elDropDown: false,\r\n                    timer: false,\r\n                }\r\n            },\r\n            mounted() {\r\n                this.bodyContainer = document.createElement('DIV');\r\n                this.bodyContainer.classList.add('devbx-webform-clean-css');\r\n                this.bodyContainer.classList.add('devbx-webform-theme');\r\n                this.bodyContainer.classList.add('multiselect');\r\n                this.bodyContainer.style.position = 'absolute';\r\n\r\n\r\n                document.body.appendChild(this.bodyContainer);\r\n\r\n                this.bodyContainer.appendChild(this.$refs.list);\r\n            },\r\n            beforeDestroy() {\r\n                if (this.timer) {\r\n                    clearInterval(this.timer);\r\n                }\r\n\r\n                this.bodyContainer.remove();\r\n            },\r\n            methods: {\r\n                updatePosition() {\r\n                    let elRect = this.$el.getBoundingClientRect();\r\n\r\n                    if (this.isAbove) {\r\n                        this.bodyContainer.style.position = 'absolute';\r\n\r\n                        this.$refs.list.style.display = 'block';\r\n                        let dropDownRect = this.$refs.list.getBoundingClientRect();\r\n\r\n                        this.bodyContainer.style.top = (window.scrollY + elRect.y - dropDownRect.height) + 'px';\r\n                        this.bodyContainer.style.left = window.scrollX + elRect.x + 'px';\r\n                        this.bodyContainer.style.width = elRect.width + 'px';\r\n                    } else {\r\n                        this.bodyContainer.style.position = 'absolute';\r\n                        this.bodyContainer.style.top = (window.scrollY + elRect.y + elRect.height) + 'px';\r\n                        this.bodyContainer.style.left = window.scrollX + elRect.x + 'px';\r\n                        this.bodyContainer.style.width = elRect.width + 'px';\r\n                    }\r\n                }\r\n            },\r\n            watch: {\r\n                'isOpen': function (val) {\r\n                    if (val) {\r\n                        this.bodyContainer.style.display = 'block';\r\n                        this.updatePosition();\r\n                        if (!this.timer) {\r\n                            this.timer = setInterval(BX.delegate(this.updatePosition, this), 100);\r\n                        }\r\n                    } else {\r\n                        this.bodyContainer.style.display = 'none';\r\n                        clearInterval(this.timer);\r\n                        this.timer = false;\r\n                    }\r\n                },\r\n            },\r\n            template: `\r\n  <div\r\n    :tabindex=\"searchable ? -1 : tabindex\"\r\n    :class=\"{ 'multiselect--active': isOpen, 'multiselect--disabled': disabled, 'multiselect--above': isAbove, 'multiselect--has-options-group': hasOptionGroup }\"\r\n    @focus=\"activate()\"\r\n    @blur=\"searchable ? false : deactivate()\"\r\n    @keydown.self.down.prevent=\"pointerForward()\"\r\n    @keydown.self.up.prevent=\"pointerBackward()\"\r\n    @keypress.enter.tab.stop.self=\"addPointerElement($event)\"\r\n    @keyup.esc=\"deactivate()\"\r\n    class=\"multiselect\"\r\n    role=\"combobox\"\r\n    :aria-owns=\"'listbox-'+id\">\r\n      <slot name=\"caret\" :toggle=\"toggle\">\r\n        <div @mousedown.prevent.stop=\"toggle()\" class=\"multiselect__select\"></div>\r\n      </slot>\r\n      <slot name=\"clear\" :search=\"search\"></slot>\r\n      <div ref=\"tags\" class=\"multiselect__tags\">\r\n        <slot\r\n          name=\"selection\"\r\n          :search=\"search\"\r\n          :remove=\"removeElement\"\r\n          :values=\"visibleValues\"\r\n          :is-open=\"isOpen\"\r\n        >\r\n          <div class=\"multiselect__tags-wrap\" v-show=\"visibleValues.length > 0\">\r\n            <template v-for=\"(option, index) of visibleValues\" @mousedown.prevent>\r\n              <slot name=\"tag\" :option=\"option\" :search=\"search\" :remove=\"removeElement\">\r\n                <span class=\"multiselect__tag\" :key=\"index\">\r\n                  <span v-text=\"getOptionLabel(option)\"></span>\r\n                  <i tabindex=\"1\" @keypress.enter.prevent=\"removeElement(option)\"  @mousedown.prevent=\"removeElement(option)\" class=\"multiselect__tag-icon\"></i>\r\n                </span>\r\n              </slot>\r\n            </template>\r\n          </div>\r\n          <template v-if=\"internalValue && internalValue.length > limit\">\r\n            <slot name=\"limit\">\r\n              <strong class=\"multiselect__strong\" v-text=\"limitText(internalValue.length - limit)\"/>\r\n            </slot>\r\n          </template>\r\n        </slot>\r\n        <transition name=\"multiselect__loading\">\r\n          <slot name=\"loading\">\r\n            <div v-show=\"loading\" class=\"multiselect__spinner\"/>\r\n          </slot>\r\n        </transition>\r\n        <input\r\n          ref=\"search\"\r\n          v-if=\"searchable\"\r\n          :name=\"name\"\r\n          :id=\"id\"\r\n          type=\"text\"\r\n          autocomplete=\"off\"\r\n          spellcheck=\"false\"\r\n          :placeholder=\"placeholder\"\r\n          :style=\"inputStyle\"\r\n          :value=\"search\"\r\n          :disabled=\"disabled\"\r\n          :tabindex=\"tabindex\"\r\n          @input=\"updateSearch($event.target.value)\"\r\n          @focus.prevent=\"activate()\"\r\n          @blur.prevent=\"deactivate()\"\r\n          @keyup.esc=\"deactivate()\"\r\n          @keydown.down.prevent=\"pointerForward()\"\r\n          @keydown.up.prevent=\"pointerBackward()\"\r\n          @keypress.enter.prevent.stop.self=\"addPointerElement($event)\"\r\n          @keydown.delete.stop=\"removeLastElement()\"\r\n          class=\"multiselect__input\"\r\n          :aria-controls=\"'listbox-'+id\"\r\n        />\r\n        <span\r\n          v-if=\"isSingleLabelVisible\"\r\n          class=\"multiselect__single\"\r\n          @mousedown.prevent=\"toggle\"\r\n        >\r\n          <slot name=\"singleLabel\" :option=\"singleValue\">\r\n            <template>{{ currentOptionLabel }}</template>\r\n          </slot>\r\n        </span>\r\n        <span\r\n          v-if=\"isPlaceholderVisible\"\r\n          class=\"multiselect__placeholder\"\r\n          @mousedown.prevent=\"toggle\"\r\n        >\r\n          <slot name=\"placeholder\">\r\n            {{ placeholder }}\r\n          </slot>\r\n        </span>\r\n      </div>\r\n      <transition name=\"multiselect\">\r\n        <div\r\n          class=\"multiselect__content-wrapper\"\r\n          v-show=\"isOpen\"\r\n          @focus=\"activate\"\r\n          tabindex=\"-1\"\r\n          @mousedown.prevent\r\n          :style=\"{ maxHeight: optimizedHeight + 'px' }\"\r\n          ref=\"list\"\r\n        >\r\n          <ul class=\"multiselect__content\" :style=\"contentStyle\" role=\"listbox\" :id=\"'listbox-'+id\">\r\n            <slot name=\"beforeList\"></slot>\r\n            <li v-if=\"multiple && max === internalValue.length\">\r\n              <span class=\"multiselect__option\">\r\n                <slot name=\"maxElements\">Maximum of {{ max }} options selected. First remove a selected option to select another.</slot>\r\n              </span>\r\n            </li>\r\n            <template v-if=\"!max || internalValue.length < max\">\r\n              <li class=\"multiselect__element\"\r\n                v-for=\"(option, index) of filteredOptions\"\r\n                :key=\"index\"\r\n                v-bind:id=\"id + '-' + index\"\r\n                v-bind:role=\"!(option && (option.$isLabel || option.$isDisabled)) ? 'option' : null\">\r\n                <span\r\n                  v-if=\"!(option && (option.$isLabel || option.$isDisabled))\"\r\n                  :class=\"optionHighlight(index, option)\"\r\n                  @click.stop=\"select(option)\"\r\n                  @mouseenter.self=\"pointerSet(index)\"\r\n                  :data-select=\"option && option.isTag ? tagPlaceholder : selectLabelText\"\r\n                  :data-selected=\"selectedLabelText\"\r\n                  :data-deselect=\"deselectLabelText\"\r\n                  class=\"multiselect__option\">\r\n                    <slot name=\"option\" :option=\"option\" :search=\"search\" :index=\"index\">\r\n                      <span>{{ getOptionLabel(option) }}</span>\r\n                    </slot>\r\n                </span>\r\n                <span\r\n                  v-if=\"option && (option.$isLabel || option.$isDisabled)\"\r\n                  :data-select=\"groupSelect && selectGroupLabelText\"\r\n                  :data-deselect=\"groupSelect && deselectGroupLabelText\"\r\n                  :class=\"groupHighlight(index, option)\"\r\n                  @mouseenter.self=\"groupSelect && pointerSet(index)\"\r\n                  @mousedown.prevent=\"selectGroup(option)\"\r\n                  class=\"multiselect__option\">\r\n                    <slot name=\"option\" :option=\"option\" :search=\"search\" :index=\"index\">\r\n                      <span>{{ getOptionLabel(option) }}</span>\r\n                    </slot>\r\n                </span>\r\n              </li>\r\n            </template>\r\n            <li v-show=\"showNoResults && (filteredOptions.length === 0 && search && !loading)\">\r\n              <span class=\"multiselect__option\">\r\n                <slot name=\"noResult\" :search=\"search\">{{noElementsFoundText}}</slot>\r\n              </span>\r\n            </li>\r\n            <li v-show=\"showNoOptions && ((options.length === 0 || (hasOptionGroup === true && filteredOptions.length === 0)) && !search && !loading)\">\r\n              <span class=\"multiselect__option\">\r\n                <slot name=\"noOptions\">{{listIsEmpty}}</slot>\r\n              </span>\r\n            </li>\r\n            <slot name=\"afterList\"></slot>\r\n          </ul>\r\n        </div>\r\n      </transition>\r\n  </div>\r\n  `\r\n        });\r\n    }\r\n\r\n    BX.addCustomEvent(\"DevBxWebFormCreated\", registerMultiselect);\r\n    BX.addCustomEvent(\"DevBxWebFormCreatedAdminMaster\", registerMultiselect);\r\n})();\r\n\r\n"],"names":["isEmpty","opt","Array","isArray","length","not","fun","includes","str","query","undefined","text","toString","toLowerCase","indexOf","trim","filterOptions","options","search","label","customLabel","filter","option","stripGroups","$isLabel","flattenOptions","values","reduce","prev","curr","push","$groupLabel","concat","filterGroups","groupLabel","groups","map","group","console","warn","groupOptions","flow","fns","x","v","f","data","isOpen","preferredOpenDirection","optimizedHeight","maxHeight","props","internalSearch","type","Boolean","required","multiple","value","trackBy","String","searchable","clearOnSelect","hideSelected","placeholder","allowEmpty","resetAfter","closeOnSelect","Function","taggable","tagPlaceholder","tagPosition","max","Number","id","optionsLimit","groupValues","groupSelect","blockKeys","preserveSearch","preselectFirst","preventAutofocus","mounted","internalValue","select","filteredOptions","computed","normalizedSearch","filterAndFlat","isSelected","isExistingOption","isTag","unshift","slice","valueKeys","element","optionKeys","flatAndStrip","currentOptionLabel","getOptionLabel","watch","$emit","methods","getValue","updateSearch","isOptionDisabled","$isDisabled","key","selectGroup","disabled","pointerDirty","deactivate","removeElement","selectedGroup","find","wholeGroupSelected","newValue","optionsToAdd","splice","every","wholeGroupDisabled","shouldClose","index","removeLastElement","activate","adjustPosition","pointer","$nextTick","$refs","focus","$el","blur","toggle","window","spaceAbove","getBoundingClientRect","top","spaceBelow","innerHeight","bottom","hasEnoughSpaceBelow","openDirection","Math","min","showPointer","optionHeight","pointerPosition","visibleElements","pointerAdjust","setAttribute","optionHighlight","groupHighlight","addPointerElement","pointerReset","pointerForward","list","scrollTop","pointerBackward","pointerSet","registerMultiselect","app","component","mixins","multiselectMixin","pointerMixin","name","selectLabel","selectGroupLabel","selectedLabel","deselectLabel","deselectGroupLabel","noElementsFoundText","listIsEmpty","showLabels","limit","limitText","count","loading","showNoOptions","showNoResults","tabindex","hasOptionGroup","isSingleLabelVisible","singleValue","visibleValues","isPlaceholderVisible","deselectLabelText","deselectGroupLabelText","selectLabelText","selectGroupLabelText","selectedLabelText","inputStyle","width","position","padding","contentStyle","display","isAbove","showSearchInput","hasSingleSelectedSlot","visibleSingleValue","elDropDown","timer","bodyContainer","document","createElement","classList","add","style","body","appendChild","beforeDestroy","clearInterval","remove","updatePosition","elRect","dropDownRect","scrollY","y","height","left","scrollX","val","setInterval","BX","delegate","template","addCustomEvent"],"mappings":"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"}