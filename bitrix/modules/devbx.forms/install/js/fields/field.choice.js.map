{"version":3,"file":"field.choice.js","sources":["../../../srcjs/vue-webform-public/fields/field.mixin.js","../../../srcjs/vue-webform-public/fields/field.choice/devbx.form.layout.field.choice.js"],"sourcesContent":["export default {\r\n    props: ['page', 'item', 'row', 'active', 'config'],\r\n    data() {\r\n        return {\r\n        };\r\n    },\r\n    mounted() {\r\n        this.item.component = this;\r\n    },\r\n    unmounted() {\r\n        this.item.component = false;\r\n    },\r\n    computed: {\r\n        labelFormatted() {\r\n            return this.$root.htmlFormatFields(BX.util.htmlspecialchars(this.config.label));\r\n        },\r\n\r\n        formLabelFormatted() {\r\n            return this.labelFormatted + (this.required ? ' <span class=\"devbx-webform-asterisk\">*</span>' : '');\r\n        },\r\n\r\n        helpTextFormatted() {\r\n            return this.$root.htmlFormatFields(this.config.helpText);\r\n        },\r\n\r\n        id() {\r\n            return 'devbx-webform-' + this.$.uid;\r\n        },\r\n\r\n        readonly() {\r\n            return this.$root.formReadonly || this.$root.checkCondition(this, this.config, 'readOnlyRule') === true;\r\n        },\r\n\r\n\r\n        required() {\r\n            return this.$root.checkCondition(this, this.config, 'requireRule') === true;\r\n        },\r\n\r\n        hasCustomError() {\r\n            return this.$root.checkCondition(this, this.config, 'showCustomError') === true;\r\n        },\r\n\r\n        errorMessage: {\r\n            get() {\r\n                return this.item.errorMessage;\r\n            },\r\n            set(value) {\r\n                this.item.errorMessage = value;\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        checkRequired() {\r\n            if (!this.$root.validation)\r\n                return false;\r\n\r\n            if (typeof this.field === \"undefined\") {\r\n                console.error('computed field not defined');\r\n                return false;\r\n            }\r\n\r\n            if (this.required) {\r\n                if (typeof this.field.value === \"number\")\r\n                    return false;\r\n\r\n                if (typeof this.field.value === \"boolean\" && this.field.value)\r\n                    return false;\r\n\r\n                if (this.field.value === undefined || this.field.value === null || !this.field.value.length) {\r\n                    this.errorMessage = this.$root.formatString(this.$Bitrix.Loc.getMessage('DEVBX_WEB_FORM_ERR_FIELD_REQUIRED'), '#FIELD_NAME#', this.labelFormatted);\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        checkCustomError()\r\n        {\r\n            if (!this.$root.validation)\r\n                return false;\r\n\r\n            if (this.config.customError && this.hasCustomError)\r\n            {\r\n                this.errorMessage = this.config.customError;\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        checkRuleErrors()\r\n        {\r\n            this.errorMessage = '';\r\n\r\n            if (this.checkRequired())\r\n                return true;\r\n\r\n            return this.checkCustomError();\r\n        },\r\n    },\r\n}","import './devbx.form.layout.field.choice.css';\r\nimport fieldMixin from \"./../field.mixin\";\r\n\r\nBX.addCustomEvent(\"DevBxWebFormCreated\", function(app) {\r\n    app.component('devbx-form-layout-field-choice', {\r\n        mixins: [fieldMixin],\r\n        mounted() {\r\n            if (!this.fieldText.changed) {\r\n                let optText = [], optValue = [];\r\n\r\n                this.config.options.forEach(item => {\r\n                    if (item.selected) {\r\n                        optText.push(item.text);\r\n                        optValue.push(item.value);\r\n                    }\r\n                });\r\n\r\n                if (this.config.type == 'CHECKBOX') {\r\n                    this.fieldText.value = optText;\r\n                    this.field.value = optValue;\r\n                } else {\r\n                    this.fieldText.value = optText.length ? optText[0] : '';\r\n                    this.field.value = optValue.length ? optValue[0] : '';\r\n                }\r\n            }\r\n        },\r\n        computed: {\r\n            assignValues() {\r\n                return this.choiceOptions.indexOf('ASSIGN_VALUES') >= 0;\r\n            },\r\n\r\n            fieldText() {\r\n                return this.$root.formFieldByName['Fields.' + this.config.fieldName + '.Text'];\r\n            },\r\n\r\n            field() {\r\n                return this.$root.formFieldByName['Fields.' + this.config.fieldName + '.Value'];\r\n            },\r\n\r\n            options() {\r\n\r\n                let result = [];\r\n\r\n                if (this.config.type == 'DROP_DOWN') {\r\n                    result.push({\r\n                        text: '',\r\n                        value: '',\r\n                    });\r\n                }\r\n\r\n                this.config.options.forEach(item => {\r\n                    let option = {\r\n                        text: item.text,\r\n                        value: item.value,\r\n                    };\r\n\r\n                    if (this.config.type == 'CHECKBOX') {\r\n                        option.selected = this.field.value.indexOf(item.value) >= 0;\r\n                    } else {\r\n                        option.selected = this.field.value === item.value;\r\n                    }\r\n\r\n                    result.push(option);\r\n                });\r\n\r\n                return result;\r\n            },\r\n\r\n            selectedOption() {\r\n                let result = false;\r\n\r\n                this.options.every(option => {\r\n                    if (option.selected) {\r\n                        result = option;\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                });\r\n\r\n                return result;\r\n            },\r\n\r\n            selectedValue() {\r\n                return this.field.value;\r\n            },\r\n        },\r\n        methods: {\r\n            toggleValue(value, checked) {\r\n                this.options.every(item => {\r\n                    if (item.value !== value)\r\n                        return true;\r\n\r\n                    if (this.config.type == 'CHECKBOX') {\r\n                        let idxText = this.fieldText.value.indexOf(item.text),\r\n                            idxValue = this.field.value.indexOf(item.value);\r\n\r\n                        if (checked) {\r\n                            if (idxText < 0)\r\n                                this.fieldText.value.push(item.text);\r\n                            if (idxValue < 0)\r\n                                this.field.value.push(item.value);\r\n                        } else {\r\n                            if (idxText >= 0)\r\n                                this.fieldText.value.splice(idxText, 1);\r\n                            if (idxValue >= 0)\r\n                                this.field.value.splice(idxValue, 1);\r\n                        }\r\n                    } else {\r\n                        if (checked) {\r\n                            this.fieldText.value = item.text;\r\n                            this.field.value = item.value;\r\n                        } else {\r\n                            this.fieldText.value = '';\r\n                            this.field.value = '';\r\n                        }\r\n                    }\r\n\r\n                    this.fieldText.changed = true;\r\n                    this.field.changed = true;\r\n\r\n                    this.$root.checkPageErrors(false, false);\r\n\r\n                    return false;\r\n                });\r\n            },\r\n\r\n            updateSelectValue(option) {\r\n                this.fieldText.value = option.text;\r\n                this.field.value = option.value;\r\n                this.fieldText.changed = true;\r\n                this.field.changed = true;\r\n\r\n                if (this.errorMessage)\r\n                    this.checkErrors();\r\n            },\r\n\r\n            checkErrors() {\r\n                return this.checkRuleErrors();\r\n            },\r\n\r\n            setFocus() {\r\n                if (this.$refs.multiselect) {\r\n                    this.$refs.multiselect.activate();\r\n                }\r\n            }\r\n        },\r\n        template: `\r\n    <div class=\"devbx-webform-field\" :class=\"{'devbx-webform-required': required, 'devbx-webform--is-error': errorMessage.length}\">\r\n        <span class=\"devbx-webform-label\" v-html=\"formLabelFormatted\" v-if=\"!config.labelHidden\">\r\n        </span>\r\n        \r\n        <div class=\"devbx-webform-choice-drop-down\" v-if=\"config.type == 'DROP_DOWN'\">\r\n            <vue-multiselect\r\n                ref=\"multiselect\"\r\n                :options=\"options\"\r\n                :placeholder=\"config.placeholder\"\r\n                :no-elements-found-text=\"$Bitrix.Loc.getMessage('DEVBX_WEB_FORM_CHOICE_NO_ELEMENTS_FOUND')\"\r\n                :list-is-empty=\"$Bitrix.Loc.getMessage('DEVBX_WEB_FORM_LIST_IS_EMPTY')\"\r\n                @select=\"updateSelectValue\"\r\n                :value=\"selectedOption\"\r\n                track-by=\"value\"\r\n                label=\"text\"\r\n                key=\"value\"\r\n                :show-labels=\"false\"\r\n                :disabled=\"readonly\"\r\n            ></vue-multiselect>\r\n        </div>    \r\n        <div class=\"devbx-webform-choice-radio\" v-if=\"config.type == 'RADIO'\">\r\n                <div :class=\"{\r\n                    'devbx-webform-choice-column-1': config.visual == 'ONE_COLUMN',\r\n                    'devbx-webform-choice-column-2': config.visual == 'TWO_COLUMN',\r\n                    'devbx-webform-choice-column-0': config.visual == 'SIDE_BY_SIDE',\r\n                    }\">\r\n                     <div class=\"devbx-webform-choice-option\" v-for=\"option in options\">\r\n                        <label>\r\n                            <input class=\"devbx-webform-radio\" \r\n                                tabindex=\"-1\" \r\n                                @click=\"toggleValue(option.value, $event.target.checked)\" \r\n                                type=\"radio\" \r\n                                :disabled=\"readonly\"\r\n                                :checked=\"option.selected\">\r\n                            <span class=\"devbx-webform-radio-label\">{{option.text}}</span>                    \r\n                        </label>                 \r\n                     </div>\r\n                </div>\r\n        </div>\r\n\r\n        <div class=\"devbx-webform-choice-checkbox\" v-if=\"config.type == 'CHECKBOX'\">\r\n                <div :class=\"{\r\n                    'devbx-webform-choice-column-1': config.visual == 'ONE_COLUMN',\r\n                    'devbx-webform-choice-column-2': config.visual == 'TWO_COLUMN',\r\n                    'devbx-webform-choice-column-0': config.visual == 'SIDE_BY_SIDE',\r\n                    }\">\r\n                     <div class=\"devbx-webform-choice-option\" v-for=\"option in options\">\r\n                        <label>\r\n                            <input class=\"devbx-webform-checkbox\" \r\n                            tabindex=\"-1\" \r\n                            @click=\"toggleValue(option.value, $event.target.checked)\" \r\n                            type=\"checkbox\" \r\n                            :disabled=\"readonly\"\r\n                            :checked=\"option.selected\"\r\n                            >\r\n                            <span class=\"devbx-webform-checkbox-label\">{{option.text}}</span>                    \r\n                        </label>                 \r\n                     </div>\r\n                </div>\r\n        </div>\r\n        \r\n        <div class=\"devbx-webform-helptext\" v-if=\"helpTextFormatted.length>0\" v-html=\"helpTextFormatted\"></div>\r\n\r\n        <transition name=\"devbx-webform-field\">\r\n            <div class=\"devbx-webform-error-message\" v-if=\"errorMessage\" v-html=\"errorMessage\"></div>\r\n        </transition>\r\n    </div>\r\n    `\r\n    });\r\n});"],"names":["props","data","mounted","item","component","unmounted","computed","labelFormatted","$root","htmlFormatFields","BX","util","htmlspecialchars","config","label","formLabelFormatted","required","helpTextFormatted","helpText","id","$","uid","readonly","formReadonly","checkCondition","hasCustomError","errorMessage","get","set","value","methods","checkRequired","validation","field","console","error","undefined","length","formatString","$Bitrix","Loc","getMessage","checkCustomError","customError","checkRuleErrors","addCustomEvent","app","mixins","fieldMixin","fieldText","changed","optText","optValue","options","forEach","selected","push","text","type","assignValues","choiceOptions","indexOf","formFieldByName","fieldName","result","option","selectedOption","every","selectedValue","toggleValue","checked","idxText","idxValue","splice","checkPageErrors","updateSelectValue","checkErrors","setFocus","$refs","multiselect","activate","template"],"mappings":";;;;;AAAA,mBAAe;IACXA,KAAK,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAClDC,IAAI,kBAAG;MACH,OAAO,EACN;KACJ;IACDC,OAAO,qBAAG;MACN,IAAI,CAACC,IAAI,CAACC,SAAS,GAAG,IAAI;KAC7B;IACDC,SAAS,uBAAG;MACR,IAAI,CAACF,IAAI,CAACC,SAAS,GAAG,KAAK;KAC9B;IACDE,QAAQ,EAAE;MACNC,cAAc,4BAAG;QACb,OAAO,IAAI,CAACC,KAAK,CAACC,gBAAgB,CAACC,EAAE,CAACC,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC;OAClF;MAEDC,kBAAkB,gCAAG;QACjB,OAAO,IAAI,CAACR,cAAc,IAAI,IAAI,CAACS,QAAQ,GAAG,gDAAgD,GAAG,EAAE,CAAC;OACvG;MAEDC,iBAAiB,+BAAG;QAChB,OAAO,IAAI,CAACT,KAAK,CAACC,gBAAgB,CAAC,IAAI,CAACI,MAAM,CAACK,QAAQ,CAAC;OAC3D;MAEDC,EAAE,gBAAG;QACD,OAAO,gBAAgB,GAAG,IAAI,CAACC,CAAC,CAACC,GAAG;OACvC;MAEDC,QAAQ,sBAAG;QACP,OAAO,IAAI,CAACd,KAAK,CAACe,YAAY,IAAI,IAAI,CAACf,KAAK,CAACgB,cAAc,CAAC,IAAI,EAAE,IAAI,CAACX,MAAM,EAAE,cAAc,CAAC,KAAK,IAAI;OAC1G;MAGDG,QAAQ,sBAAG;QACP,OAAO,IAAI,CAACR,KAAK,CAACgB,cAAc,CAAC,IAAI,EAAE,IAAI,CAACX,MAAM,EAAE,aAAa,CAAC,KAAK,IAAI;OAC9E;MAEDY,cAAc,4BAAG;QACb,OAAO,IAAI,CAACjB,KAAK,CAACgB,cAAc,CAAC,IAAI,EAAE,IAAI,CAACX,MAAM,EAAE,iBAAiB,CAAC,KAAK,IAAI;OAClF;MAEDa,YAAY,EAAE;QACVC,GAAG,iBAAG;UACF,OAAO,IAAI,CAACxB,IAAI,CAACuB,YAAY;SAChC;QACDE,GAAG,eAACC,KAAK,EAAE;UACP,IAAI,CAAC1B,IAAI,CAACuB,YAAY,GAAGG,KAAK;;;KAGzC;IACDC,OAAO,EAAE;MACLC,aAAa,2BAAG;QACZ,IAAI,CAAC,IAAI,CAACvB,KAAK,CAACwB,UAAU,EACtB,OAAO,KAAK;QAEhB,IAAI,OAAO,IAAI,CAACC,KAAK,KAAK,WAAW,EAAE;UACnCC,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;UAC3C,OAAO,KAAK;;QAGhB,IAAI,IAAI,CAACnB,QAAQ,EAAE;UACf,IAAI,OAAO,IAAI,CAACiB,KAAK,CAACJ,KAAK,KAAK,QAAQ,EACpC,OAAO,KAAK;UAEhB,IAAI,OAAO,IAAI,CAACI,KAAK,CAACJ,KAAK,KAAK,SAAS,IAAI,IAAI,CAACI,KAAK,CAACJ,KAAK,EACzD,OAAO,KAAK;UAEhB,IAAI,IAAI,CAACI,KAAK,CAACJ,KAAK,KAAKO,SAAS,IAAI,IAAI,CAACH,KAAK,CAACJ,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,CAACI,KAAK,CAACJ,KAAK,CAACQ,MAAM,EAAE;YACzF,IAAI,CAACX,YAAY,GAAG,IAAI,CAAClB,KAAK,CAAC8B,YAAY,CAAC,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC,mCAAmC,CAAC,EAAE,cAAc,EAAE,IAAI,CAAClC,cAAc,CAAC;YAClJ,OAAO,IAAI;;;QAInB,OAAO,KAAK;OACf;MAEDmC,gBAAgB,8BAChB;QACI,IAAI,CAAC,IAAI,CAAClC,KAAK,CAACwB,UAAU,EACtB,OAAO,KAAK;QAEhB,IAAI,IAAI,CAACnB,MAAM,CAAC8B,WAAW,IAAI,IAAI,CAAClB,cAAc,EAClD;UACI,IAAI,CAACC,YAAY,GAAG,IAAI,CAACb,MAAM,CAAC8B,WAAW;UAC3C,OAAO,IAAI;;QAGf,OAAO,KAAK;OACf;MAEDC,eAAe,6BACf;QACI,IAAI,CAAClB,YAAY,GAAG,EAAE;QAEtB,IAAI,IAAI,CAACK,aAAa,EAAE,EACpB,OAAO,IAAI;QAEf,OAAO,IAAI,CAACW,gBAAgB,EAAE;;;EAG1C,CAAC;;EClGDhC,EAAE,CAACmC,cAAc,CAAC,qBAAqB,EAAE,UAASC,GAAG,EAAE;IACnDA,GAAG,CAAC1C,SAAS,CAAC,gCAAgC,EAAE;MAC5C2C,MAAM,EAAE,CAACC,UAAU,CAAC;MACpB9C,OAAO,qBAAG;QACN,IAAI,CAAC,IAAI,CAAC+C,SAAS,CAACC,OAAO,EAAE;UACzB,IAAIC,OAAO,GAAG,EAAE;YAAEC,QAAQ,GAAG,EAAE;UAE/B,IAAI,CAACvC,MAAM,CAACwC,OAAO,CAACC,OAAO,CAAC,UAAAnD,IAAI,EAAI;YAChC,IAAIA,IAAI,CAACoD,QAAQ,EAAE;cACfJ,OAAO,CAACK,IAAI,CAACrD,IAAI,CAACsD,IAAI,CAAC;cACvBL,QAAQ,CAACI,IAAI,CAACrD,IAAI,CAAC0B,KAAK,CAAC;;WAEhC,CAAC;UAEF,IAAI,IAAI,CAAChB,MAAM,CAAC6C,IAAI,IAAI,UAAU,EAAE;YAChC,IAAI,CAACT,SAAS,CAACpB,KAAK,GAAGsB,OAAO;YAC9B,IAAI,CAAClB,KAAK,CAACJ,KAAK,GAAGuB,QAAQ;WAC9B,MAAM;YACH,IAAI,CAACH,SAAS,CAACpB,KAAK,GAAGsB,OAAO,CAACd,MAAM,GAAGc,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE;YACvD,IAAI,CAAClB,KAAK,CAACJ,KAAK,GAAGuB,QAAQ,CAACf,MAAM,GAAGe,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE;;;OAGhE;MACD9C,QAAQ,EAAE;QACNqD,YAAY,0BAAG;UACX,OAAO,IAAI,CAACC,aAAa,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC;SAC1D;QAEDZ,SAAS,uBAAG;UACR,OAAO,IAAI,CAACzC,KAAK,CAACsD,eAAe,CAAC,SAAS,GAAG,IAAI,CAACjD,MAAM,CAACkD,SAAS,GAAG,OAAO,CAAC;SACjF;QAED9B,KAAK,mBAAG;UACJ,OAAO,IAAI,CAACzB,KAAK,CAACsD,eAAe,CAAC,SAAS,GAAG,IAAI,CAACjD,MAAM,CAACkD,SAAS,GAAG,QAAQ,CAAC;SAClF;QAEDV,OAAO,qBAAG;UAAA;UAEN,IAAIW,MAAM,GAAG,EAAE;UAEf,IAAI,IAAI,CAACnD,MAAM,CAAC6C,IAAI,IAAI,WAAW,EAAE;YACjCM,MAAM,CAACR,IAAI,CAAC;cACRC,IAAI,EAAE,EAAE;cACR5B,KAAK,EAAE;aACV,CAAC;;UAGN,IAAI,CAAChB,MAAM,CAACwC,OAAO,CAACC,OAAO,CAAC,UAAAnD,IAAI,EAAI;YAChC,IAAI8D,MAAM,GAAG;cACTR,IAAI,EAAEtD,IAAI,CAACsD,IAAI;cACf5B,KAAK,EAAE1B,IAAI,CAAC0B;aACf;YAED,IAAI,KAAI,CAAChB,MAAM,CAAC6C,IAAI,IAAI,UAAU,EAAE;cAChCO,MAAM,CAACV,QAAQ,GAAG,KAAI,CAACtB,KAAK,CAACJ,KAAK,CAACgC,OAAO,CAAC1D,IAAI,CAAC0B,KAAK,CAAC,IAAI,CAAC;aAC9D,MAAM;cACHoC,MAAM,CAACV,QAAQ,GAAG,KAAI,CAACtB,KAAK,CAACJ,KAAK,KAAK1B,IAAI,CAAC0B,KAAK;;YAGrDmC,MAAM,CAACR,IAAI,CAACS,MAAM,CAAC;WACtB,CAAC;UAEF,OAAOD,MAAM;SAChB;QAEDE,cAAc,4BAAG;UACb,IAAIF,MAAM,GAAG,KAAK;UAElB,IAAI,CAACX,OAAO,CAACc,KAAK,CAAC,UAAAF,MAAM,EAAI;YACzB,IAAIA,MAAM,CAACV,QAAQ,EAAE;cACjBS,MAAM,GAAGC,MAAM;cACf,OAAO,KAAK;;YAEhB,OAAO,IAAI;WACd,CAAC;UAEF,OAAOD,MAAM;SAChB;QAEDI,aAAa,2BAAG;UACZ,OAAO,IAAI,CAACnC,KAAK,CAACJ,KAAK;;OAE9B;MACDC,OAAO,EAAE;QACLuC,WAAW,uBAACxC,KAAK,EAAEyC,OAAO,EAAE;UAAA;UACxB,IAAI,CAACjB,OAAO,CAACc,KAAK,CAAC,UAAAhE,IAAI,EAAI;YACvB,IAAIA,IAAI,CAAC0B,KAAK,KAAKA,KAAK,EACpB,OAAO,IAAI;YAEf,IAAI,MAAI,CAAChB,MAAM,CAAC6C,IAAI,IAAI,UAAU,EAAE;cAChC,IAAIa,OAAO,GAAG,MAAI,CAACtB,SAAS,CAACpB,KAAK,CAACgC,OAAO,CAAC1D,IAAI,CAACsD,IAAI,CAAC;gBACjDe,QAAQ,GAAG,MAAI,CAACvC,KAAK,CAACJ,KAAK,CAACgC,OAAO,CAAC1D,IAAI,CAAC0B,KAAK,CAAC;cAEnD,IAAIyC,OAAO,EAAE;gBACT,IAAIC,OAAO,GAAG,CAAC,EACX,MAAI,CAACtB,SAAS,CAACpB,KAAK,CAAC2B,IAAI,CAACrD,IAAI,CAACsD,IAAI,CAAC;gBACxC,IAAIe,QAAQ,GAAG,CAAC,EACZ,MAAI,CAACvC,KAAK,CAACJ,KAAK,CAAC2B,IAAI,CAACrD,IAAI,CAAC0B,KAAK,CAAC;eACxC,MAAM;gBACH,IAAI0C,OAAO,IAAI,CAAC,EACZ,MAAI,CAACtB,SAAS,CAACpB,KAAK,CAAC4C,MAAM,CAACF,OAAO,EAAE,CAAC,CAAC;gBAC3C,IAAIC,QAAQ,IAAI,CAAC,EACb,MAAI,CAACvC,KAAK,CAACJ,KAAK,CAAC4C,MAAM,CAACD,QAAQ,EAAE,CAAC,CAAC;;aAE/C,MAAM;cACH,IAAIF,OAAO,EAAE;gBACT,MAAI,CAACrB,SAAS,CAACpB,KAAK,GAAG1B,IAAI,CAACsD,IAAI;gBAChC,MAAI,CAACxB,KAAK,CAACJ,KAAK,GAAG1B,IAAI,CAAC0B,KAAK;eAChC,MAAM;gBACH,MAAI,CAACoB,SAAS,CAACpB,KAAK,GAAG,EAAE;gBACzB,MAAI,CAACI,KAAK,CAACJ,KAAK,GAAG,EAAE;;;YAI7B,MAAI,CAACoB,SAAS,CAACC,OAAO,GAAG,IAAI;YAC7B,MAAI,CAACjB,KAAK,CAACiB,OAAO,GAAG,IAAI;YAEzB,MAAI,CAAC1C,KAAK,CAACkE,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC;YAExC,OAAO,KAAK;WACf,CAAC;SACL;QAEDC,iBAAiB,6BAACV,MAAM,EAAE;UACtB,IAAI,CAAChB,SAAS,CAACpB,KAAK,GAAGoC,MAAM,CAACR,IAAI;UAClC,IAAI,CAACxB,KAAK,CAACJ,KAAK,GAAGoC,MAAM,CAACpC,KAAK;UAC/B,IAAI,CAACoB,SAAS,CAACC,OAAO,GAAG,IAAI;UAC7B,IAAI,CAACjB,KAAK,CAACiB,OAAO,GAAG,IAAI;UAEzB,IAAI,IAAI,CAACxB,YAAY,EACjB,IAAI,CAACkD,WAAW,EAAE;SACzB;QAEDA,WAAW,yBAAG;UACV,OAAO,IAAI,CAAChC,eAAe,EAAE;SAChC;QAEDiC,QAAQ,sBAAG;UACP,IAAI,IAAI,CAACC,KAAK,CAACC,WAAW,EAAE;YACxB,IAAI,CAACD,KAAK,CAACC,WAAW,CAACC,QAAQ,EAAE;;;OAG5C;MACDC,QAAQ;KAqEX,CAAC;EACN,CAAC,CAAC;;;;"}