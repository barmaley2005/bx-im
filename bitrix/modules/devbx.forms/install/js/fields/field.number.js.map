{"version":3,"file":"field.number.js","sources":["../../../srcjs/vue-webform-public/fields/field.mixin.js","../../../srcjs/vue-webform-public/fields/field.number/devbx.form.layout.field.number.js"],"sourcesContent":["export default {\r\n    props: ['page', 'item', 'row', 'active', 'config'],\r\n    data() {\r\n        return {\r\n        };\r\n    },\r\n    mounted() {\r\n        this.item.component = this;\r\n    },\r\n    unmounted() {\r\n        this.item.component = false;\r\n    },\r\n    computed: {\r\n        labelFormatted() {\r\n            return this.$root.htmlFormatFields(BX.util.htmlspecialchars(this.config.label));\r\n        },\r\n\r\n        formLabelFormatted() {\r\n            return this.labelFormatted + (this.required ? ' <span class=\"devbx-webform-asterisk\">*</span>' : '');\r\n        },\r\n\r\n        helpTextFormatted() {\r\n            return this.$root.htmlFormatFields(this.config.helpText);\r\n        },\r\n\r\n        id() {\r\n            return 'devbx-webform-' + this.$.uid;\r\n        },\r\n\r\n        readonly() {\r\n            return this.$root.formReadonly || this.$root.checkCondition(this, this.config, 'readOnlyRule') === true;\r\n        },\r\n\r\n\r\n        required() {\r\n            return this.$root.checkCondition(this, this.config, 'requireRule') === true;\r\n        },\r\n\r\n        hasCustomError() {\r\n            return this.$root.checkCondition(this, this.config, 'showCustomError') === true;\r\n        },\r\n\r\n        errorMessage: {\r\n            get() {\r\n                return this.item.errorMessage;\r\n            },\r\n            set(value) {\r\n                this.item.errorMessage = value;\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        checkRequired() {\r\n            if (!this.$root.validation)\r\n                return false;\r\n\r\n            if (typeof this.field === \"undefined\") {\r\n                console.error('computed field not defined');\r\n                return false;\r\n            }\r\n\r\n            if (this.required) {\r\n                if (typeof this.field.value === \"number\")\r\n                    return false;\r\n\r\n                if (typeof this.field.value === \"boolean\" && this.field.value)\r\n                    return false;\r\n\r\n                if (this.field.value === undefined || this.field.value === null || !this.field.value.length) {\r\n                    this.errorMessage = this.$root.formatString(this.$Bitrix.Loc.getMessage('DEVBX_WEB_FORM_ERR_FIELD_REQUIRED'), '#FIELD_NAME#', this.labelFormatted);\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        checkCustomError()\r\n        {\r\n            if (!this.$root.validation)\r\n                return false;\r\n\r\n            if (this.config.customError && this.hasCustomError)\r\n            {\r\n                this.errorMessage = this.config.customError;\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        checkRuleErrors()\r\n        {\r\n            this.errorMessage = '';\r\n\r\n            if (this.checkRequired())\r\n                return true;\r\n\r\n            return this.checkCustomError();\r\n        },\r\n    },\r\n}","import './devbx.form.layout.field.number.css';\r\nimport fieldMixin from \"./../field.mixin\";\r\n\r\nBX.addCustomEvent(\"DevBxWebFormCreated\", function(app) {\r\n    app.component('devbx-form-layout-field-number', {\r\n        mixins: [fieldMixin],\r\n        watch: {\r\n            'defaultValue': {\r\n                immediate: true,\r\n                handler: function (val) {\r\n                    if (!this.field.changed) {\r\n                        this.field.value = val;\r\n                    }\r\n                }\r\n            },\r\n        },\r\n        methods: {\r\n            roundValue(value) {\r\n                if (this.config.type === 'INTEGER' || this.decimalPlaces <= 0) {\r\n                    value = parseInt(value, 10);\r\n\r\n                    return isNaN(value) ? null : value;\r\n                }\r\n\r\n                value = parseFloat(value);\r\n                if (isNaN(value) || value === Infinity)\r\n                    return null;\r\n\r\n                value = value.toFixed(this.decimalPlaces).split('.');\r\n\r\n                return parseFloat(value[0] + '.' + value[1].substring(0, this.decimalPlaces));\r\n            },\r\n\r\n            onChange(event) {\r\n                let value = event.target.value.trim();\r\n\r\n                value = value.replaceAll(this.$root.culture.numberThousandsSeparator, '');\r\n                value = value.replaceAll(this.$root.culture.numberDecimalSeparator, '.');\r\n\r\n                value = this.roundValue(value);\r\n\r\n                if (value !== null) {\r\n                    if (this.maxValue !== null && value > this.maxValue)\r\n                        value = this.maxValue;\r\n\r\n                    if (this.minValue !== null && value < this.minValue)\r\n                        value = this.minValue;\r\n                } else {\r\n                    value = event.target.value.trim();\r\n                }\r\n\r\n                this.value = value;\r\n                event.target.value = this.displayValue;\r\n            },\r\n\r\n            checkErrors() {\r\n                if (this.value.length && this.roundValue(this.value) === null) {\r\n                    this.errorMessage = this.$Bitrix.Loc.getMessage('DEVBX_WEB_FORM_FIELD_NUMBER_ERR_VALUE');\r\n                    return true;\r\n                }\r\n\r\n                if (this.checkRuleErrors())\r\n                    return true;\r\n\r\n                return false;\r\n            },\r\n\r\n            setFocus() {\r\n                this.$refs.input.focus();\r\n            },\r\n\r\n            clickMinus() {\r\n                if (this.readonly)\r\n                    return;\r\n\r\n                let newValue = this.roundValue(this.value);\r\n\r\n                if (newValue === null) {\r\n                    this.value = this.minValue !== null ? this.minValue : 1;\r\n\r\n                    return;\r\n                }\r\n\r\n                newValue -= this.incrementValue;\r\n\r\n                if (this.minValue !== null && newValue < this.minValue)\r\n                    newValue = this.minValue;\r\n\r\n                this.value = newValue;\r\n            },\r\n\r\n            clickPlus() {\r\n                if (this.readonly)\r\n                    return;\r\n\r\n                let newValue = this.roundValue(this.value);\r\n\r\n                if (newValue === null) {\r\n                    this.value = this.minValue !== null ? this.minValue : 1;\r\n\r\n                    return;\r\n                }\r\n\r\n                newValue += this.incrementValue;\r\n\r\n                if (this.maxValue !== null && newValue > this.maxValue)\r\n                    newValue = this.maxValue;\r\n\r\n                this.value = newValue;\r\n            },\r\n\r\n            formatNumber(str) {\r\n                let value = this.roundValue(str);\r\n\r\n                if (value === null)\r\n                    return str;\r\n\r\n                if (this.config.type === 'INTEGER' || this.decimalPlaces <= 0) {\r\n                    value = value.toString();\r\n                } else {\r\n                    value = value.toFixed(this.decimalPlaces);\r\n                }\r\n\r\n                let parts = value.toString().split(\".\");\r\n\r\n                return parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.$root.culture.numberThousandsSeparator) +\r\n                    (parts[1] ? this.$root.culture.numberDecimalSeparator + parts[1] : \"\");\r\n            },\r\n        },\r\n        computed: {\r\n            defaultValue() {\r\n                return this.config.defaultValue;\r\n            },\r\n\r\n            decimalPlaces() {\r\n                let value = parseInt(this.config.decimalPlaces, 10);\r\n\r\n                return isNaN(value) ? 0 : value;\r\n            },\r\n\r\n            minValue() {\r\n                return this.roundValue(this.config.minValue);\r\n            },\r\n\r\n            maxValue() {\r\n                return this.roundValue(this.config.maxValue);\r\n            },\r\n\r\n            field() {\r\n                return this.$root.formFieldByName['Fields.' + this.config.fieldName];\r\n            },\r\n\r\n            value: {\r\n                get() {\r\n                    return this.field.value;\r\n                },\r\n\r\n                set(value) {\r\n                    if (this.field.value !== value)\r\n                    {\r\n                        this.field.value = value;\r\n                        this.field.changed = true;\r\n\r\n                        this.$root.checkPageErrors(false, false);\r\n                    }\r\n                },\r\n            },\r\n\r\n            displayValue() {\r\n                return this.formatNumber(this.field.value);\r\n            },\r\n\r\n            cssMaxWidth() {\r\n                let length = Math.max(this.config.placeholder.length, this.displayValue.length,\r\n                    this.formatNumber(this.defaultValue).length);\r\n\r\n                return Math.max(6 + (length * 0.5), 9).toString() + 'em';\r\n            },\r\n\r\n            incrementValue() {\r\n                let value = this.roundValue(this.config.incrementValue);\r\n\r\n                if (value === null)\r\n                    value = 1;\r\n\r\n                value = Math.abs(value);\r\n\r\n                return value;\r\n            },\r\n        },\r\n        template: `\r\n    <div class=\"devbx-webform-field\" :class=\"{'devbx-webform-required': required, 'devbx-webform--is-error': errorMessage.length}\">\r\n        <label class=\"devbx-webform-label\" :for=\"id\" v-html=\"formLabelFormatted\" v-if=\"!config.labelHidden\"></label>\r\n        <div class=\"devbx-webform-field-input\" v-if=\"config.visual == 'TEXT'\">\r\n            <input ref=\"input\"\r\n                autocomplete=\"off\" \r\n                class=\"devbx-webform-input\" \r\n                :id=\"id\" \r\n                type=\"text\" \r\n                :value=\"displayValue\"\r\n                :placeholder=\"config.placeholder\" \r\n                :readonly=\"readonly\"\r\n                @change=\"onChange\"\r\n                >\r\n        </div>\r\n        <div class=\"devbx-webform-field-input\" v-else>\r\n            <div class=\"devbx-webform-spinner-number\" :style=\"{'max-width': cssMaxWidth}\">\r\n                <span :title=\"$Bitrix.Loc.getMessage('DEVBX_WEB_FORM_FIELD_NUMBER_DECREASE_TITLE')\"\r\n                    class=\"devbx-webform-number-decrease\" @click=\"clickMinus\"\r\n                    :class=\"{'devbx-webform-disabled': readonly}\"\r\n                    >\r\n                    <i class=\"devbx-webform-icon-minus\"></i>                \r\n                </span>                    \r\n                <span :title=\"$Bitrix.Loc.getMessage('DEVBX_WEB_FORM_FIELD_NUMBER_INCREASE_TITLE')\" \r\n                    class=\"devbx-webform-number-increase\" @click=\"clickPlus\"\r\n                    :class=\"{'devbx-webform-disabled': readonly}\"\r\n                    >\r\n                    <i class=\"devbx-webform-icon-plus\"></i>                \r\n                </span>\r\n            <input ref=\"input\"\r\n                autocomplete=\"off\" \r\n                class=\"devbx-webform-input\" \r\n                :id=\"id\" \r\n                type=\"text\" \r\n                :value=\"displayValue\"\r\n                :placeholder=\"config.placeholder\" \r\n                :readonly=\"readonly\"\r\n                @change=\"onChange\"\r\n                >\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"devbx-webform-helptext\" v-if=\"helpTextFormatted.length>0\" v-html=\"helpTextFormatted\"></div>\r\n\r\n        <transition name=\"devbx-webform-field\">\r\n            <div class=\"devbx-webform-error-message\" v-if=\"errorMessage\" v-html=\"errorMessage\"></div>\r\n        </transition>\r\n    </div>\r\n    `\r\n    });\r\n});"],"names":["props","data","mounted","item","component","unmounted","computed","labelFormatted","$root","htmlFormatFields","BX","util","htmlspecialchars","config","label","formLabelFormatted","required","helpTextFormatted","helpText","id","$","uid","readonly","formReadonly","checkCondition","hasCustomError","errorMessage","get","set","value","methods","checkRequired","validation","field","console","error","undefined","length","formatString","$Bitrix","Loc","getMessage","checkCustomError","customError","checkRuleErrors","addCustomEvent","app","mixins","fieldMixin","watch","immediate","handler","val","changed","roundValue","type","decimalPlaces","parseInt","isNaN","parseFloat","Infinity","toFixed","split","substring","onChange","event","target","trim","replaceAll","culture","numberThousandsSeparator","numberDecimalSeparator","maxValue","minValue","displayValue","checkErrors","setFocus","$refs","input","focus","clickMinus","newValue","incrementValue","clickPlus","formatNumber","str","toString","parts","replace","defaultValue","formFieldByName","fieldName","checkPageErrors","cssMaxWidth","Math","max","placeholder","abs","template"],"mappings":"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"}